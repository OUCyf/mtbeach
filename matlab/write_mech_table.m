function write_mech_table(filename,otime,lat,lon,dep,M,eid)
%WRITE_MECH_TABLE write moment tensor catalog as text file
%
% INPUT
%   filename    files will be appended with _mech.txt
%   otime       n x 1 origin time (Matlab format)
%   lat         n x 1 latitude
%   lon         n x 1 longitude
%   dep         n x 1 depth, in km
%   M           6 x n array of moment tensors in GCMT convention (up-south-east)
%                   M = [Mrr Mtt Mpp Mrt Mrp Mtp], units N-m
%   eid         OPTIONAL: event IDs
%
% See also read_mech_table.m
%
% Note: If a table in this format is published, then you may want to list
% the references in the header in the bibliography that goes with the
% published paper (main text or supplement).
%
% Carl Tape, 7/16/2015
%

n = length(lat);
if nargin==6, eid = repmat(cellstr(''),n,1); end

% make sure M is 6 x n
[M,n1] = Mdim(M);

% check input argument dimensions
if n1~=n, whos M lat, error('dimension mismatch (M otime)'); end
if length(lat)~=n, whos lat otime, error('dimension mismatch (lat otime)'); end
if length(lon)~=n, whos lon otime, error('dimension mismatch (lon otime)'); end
if length(dep)~=n, whos dep otime, error('dimension mismatch (dep otime)'); end

% derive other quantities from the moment tensor
[gamma,delta,M0,kappa,theta,sigma] = CMT2TT(M,0);
Mw = m02mw(1,M0);

% round to delta = 0 and gamma = 0 to avoid showing both 0.0 and -0.0 in the table
DEPS = 0.1;
delta(abs(delta) < DEPS) = 0;
gamma(abs(gamma) < DEPS) = 0;

stfmt1 = '%24s%10s%10s%10s%14s%14s%14s%14s%14s%14s%14s%7s%7s%7s%7s%7s%7s %s\n';

stfmt = '%24s%10.4f%10.4f%10.4f%14.6e%14.6e%14.6e%14.6e%14.6e%14.6e%14.6e%7.2f%7.1f%7.1f%7.1f%7.1f%7.1f %s\n';

% write to file for GMT plotting
disp('write_mech_table.m: writing to file');
file = [filename '_mech.txt']
fid = fopen(file,'w');

% header
NHEADER = 22;
fprintf(fid,sprintf('Table of %i moment tensors generated by write_mech_table.m on %s (%i header lines)\n',...
    n,datestr(now,29),NHEADER));
fprintf(fid,'The moment tensor is provided as six Mij entries in units of N-m.\n');
fprintf(fid,'    The basis convention follows the Global Centroid Moment Tensor (GCMT, www.globalcmt.org) project:\n');
fprintf(fid,'        up-south-east or r-t-p, where r=up, t=theta=south, and p=phi=east.\n');
fprintf(fid,'    Mij are listed in order of the diagonal entries (Mrr, Mtt, Mpp), followed by the off-diagonal entries.\n');
fprintf(fid,'Also shown are other quantities derived from Mij; these entries are NOT listed with the highest precision.\n');
fprintf(fid,'Conversion from matrix M to scalar M0 is from Silver and Jordan (1982, GJRAS):\n');
fprintf(fid,'    M0 = 1/sqrt(2)*sqrt(M:M)\n');
fprintf(fid,'Conversion from M0 to Mw is from Kanamori (1977, JGR):\n');
fprintf(fid,'    Mw = (2/3)*log10(M0) + k with k = -(2/3)*(11.8 - log10(1/2e4) - 7)\n');
fprintf(fid,'The strike, dip, and slip angles uniquely define the orientation of the moment tensor.\n');
fprintf(fid,'    The strike angle kappa ranges from 0 to 360.\n');
fprintf(fid,'    The dip angle theta ranges from 0 to 90.\n');
fprintf(fid,'    The slip (or rake) angle sigma ranges from -90 to 90.\n');
fprintf(fid,'    These angles define a plane for the closest double couple\n');
fprintf(fid,'        and are not physically meaningful for a moment tensor that is far from a double couple.\n');
fprintf(fid,'    If the moment tensor is a close to a double couple,\n');
fprintf(fid,'        then the angles define either the fault plane or the auxiliary plane.\n');
fprintf(fid,'The moment tensor source type is represented by lune longitude (gamma) and lune latitude (delta) (Tape and Tape, 2012, GJI).\n');
fprintf(fid,'COLUMNS\n');
fprintf(fid,stfmt1,'origin time','lon','lat','dep','Mrr','Mtt','Mpp','Mrt','Mrp','Mtp','M0','Mw','strike','dip','slip','lune','lune','eid');
fprintf(fid,stfmt1,'yy mm dd HH MM SS.FFF','','','km','N-m','N-m','N-m','N-m','N-m','N-m','N-m','','kappa','theta','sigma','gamma','delta','');
% each row is one event that is characterized by 23 COLUMNS
for ii = 1:n
    fprintf(fid,stfmt,...
        datestr(otime(ii),'yyyy mm dd HH MM SS.FFF'),...
        lon(ii), lat(ii), dep(ii),...
        M(1,ii), M(2,ii), M(3,ii),...
        M(4,ii), M(5,ii), M(6,ii),...
        M0(ii),Mw(ii),kappa(ii),theta(ii),sigma(ii),gamma(ii),delta(ii),eid{ii});
end
fclose(fid);

%==========================================================================
% EXAMPLE

if 0==1
    axMFFZ = [-151.2 -147.5 63.5 65.5];
    [otime,tshift,hdur,lat,lon,dep,M,M0,Mw,eid] = readCMT([],axMFFZ,[]);
    filename = './GCMT_mffz';
    %write_mech_table(filename,otime,lat,lon,dep,M);
    write_mech_table(filename,otime,lat,lon,dep,M,eid);
    
    % illustrate how rounding works (rounding will occur for 0.0001 s)
    seci = 59.9999;
    %seci = 59.999;
    dnum = datenum(1979,10,20,12,34,seci);
    [y,m,d,h,mi,s] = datevec(dnum) 
    datestr(dnum,'yyyy mm dd HH MM SS.FFF')
end
    
%==========================================================================
    
